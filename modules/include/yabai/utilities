#!/usr/bin/env bash
# set -ex

create_spaces() {
    CURRENT_SPACES=$(yabai -m query --spaces | jq -r '[.[]."is-native-fullscreen"| select(.==false) ]| length')
    CURRENT_SPACE=$(yabai -m query --spaces --space | jq -r ."index")
    NEEDED_SPACES=$1

    if [[ $1 == "a" ]]; then
        yabai -m space --create
        yabai -m space last --label $2
        if [ -n "$YABAI_WINDOW_ID" ]; then
            yabai -m window $YABAI_WINDOW_ID --space $2
        fi
        yabai -m space --focus $2
        set_wallpaper "$HOME/.local/share/wallpapers/catppuccin/$(/bin/ls ~/.local/share/wallpapers/catppuccin | shuf -n 1)"
        return 0
    fi

    if [[ "$CURRENT_SPACES" -ge "$NEEDED_SPACES" ]]; then
        return
    fi
    SPACES_TO_CREATE=$(($NEEDED_SPACES - $CURRENT_SPACES))

    for i in $(seq $((1 + CURRENT_SPACES)) "$NEEDED_SPACES"); do
        echo $i
        yabai -m space --create
        yabai -m space --focus $i
    done
    yabai -m space $CURRENT_SPACE --focus

}
auto_stack() {
    INSTANCES=$(yabai -m query --windows | jq "[.[] |select(.\"app\"==\"$1\")| .\"id\"]| length")
    if [[ $INSTANCES -eq 1 ]]; then
        return 0
    fi

    NEW_APP=$YABAI_WINDOW_ID
    APP=$(yabai -m query --windows | jq "[.[] |select(.\"app\"==\"$1\" )|select(.\"id\"!=\"$NEW_APP\")][1].\"id\"")
    yabai -m window "$APP" --stack "$NEW_APP"
}

swap_displays() {
    SPACE_D1=($(yabai -m query --spaces --display 1 | jq -r '.[] | select(."is-visible" == true) | .label'))
    SPACE_D2=($(yabai -m query --spaces --display 2 | jq -r '.[] | select(."is-visible" == true) | .label'))

    yabai -m space $SPACE_D1 --display 2
    yabai -m space $SPACE_D2 --display 1
}
